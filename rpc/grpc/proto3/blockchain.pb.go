// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpc/grpc/proto3/blockchain.proto

package proto3

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import github_com_gallactic_gallactic_core_account "github.com/gallactic/gallactic/core/account"
import github_com_gallactic_gallactic_common_binary "github.com/gallactic/gallactic/common/binary"
import github_com_tendermint_tendermint_consensus_types "github.com/tendermint/tendermint/consensus/types"
import github_com_gallactic_gallactic_core_consensus_tendermint_p2p "github.com/gallactic/gallactic/core/consensus/tendermint/p2p"
import github_com_gallactic_gallactic_crypto "github.com/gallactic/gallactic/crypto"
import github_com_gallactic_gallactic_core_proposal "github.com/gallactic/gallactic/core/proposal"
import time "time"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func (*Empty) XXX_MessageName() string {
	return "proto3.Empty"
}

type AddressRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{1}
}
func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (dst *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(dst, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (*AddressRequest) XXX_MessageName() string {
	return "proto3.AddressRequest"
}

type AccountResponse struct {
	Account              *github_com_gallactic_gallactic_core_account.Account `protobuf:"bytes,1,opt,name=Account,customtype=github.com/gallactic/gallactic/core/account.Account" json:"Account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *AccountResponse) Reset()         { *m = AccountResponse{} }
func (m *AccountResponse) String() string { return proto.CompactTextString(m) }
func (*AccountResponse) ProtoMessage()    {}
func (*AccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{2}
}
func (m *AccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountResponse.Unmarshal(m, b)
}
func (m *AccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountResponse.Marshal(b, m, deterministic)
}
func (dst *AccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResponse.Merge(dst, src)
}
func (m *AccountResponse) XXX_Size() int {
	return xxx_messageInfo_AccountResponse.Size(m)
}
func (m *AccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResponse proto.InternalMessageInfo

func (*AccountResponse) XXX_MessageName() string {
	return "proto3.AccountResponse"
}

type AccountsResponse struct {
	BlockHeight          uint64             `protobuf:"varint,1,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Accounts             []*AccountResponse `protobuf:"bytes,2,rep,name=Accounts" json:"Accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AccountsResponse) Reset()         { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()    {}
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{3}
}
func (m *AccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsResponse.Unmarshal(m, b)
}
func (m *AccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsResponse.Marshal(b, m, deterministic)
}
func (dst *AccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsResponse.Merge(dst, src)
}
func (m *AccountsResponse) XXX_Size() int {
	return xxx_messageInfo_AccountsResponse.Size(m)
}
func (m *AccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsResponse proto.InternalMessageInfo

func (m *AccountsResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *AccountsResponse) GetAccounts() []*AccountResponse {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (*AccountsResponse) XXX_MessageName() string {
	return "proto3.AccountsResponse"
}

type ValidatorResponse struct {
	Validator            *ValidatorInfo `protobuf:"bytes,1,opt,name=Validator" json:"Validator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ValidatorResponse) Reset()         { *m = ValidatorResponse{} }
func (m *ValidatorResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorResponse) ProtoMessage()    {}
func (*ValidatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{4}
}
func (m *ValidatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorResponse.Unmarshal(m, b)
}
func (m *ValidatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorResponse.Marshal(b, m, deterministic)
}
func (dst *ValidatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorResponse.Merge(dst, src)
}
func (m *ValidatorResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorResponse.Size(m)
}
func (m *ValidatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorResponse proto.InternalMessageInfo

func (m *ValidatorResponse) GetValidator() *ValidatorInfo {
	if m != nil {
		return m.Validator
	}
	return nil
}

func (*ValidatorResponse) XXX_MessageName() string {
	return "proto3.ValidatorResponse"
}

type ValidatorsResponse struct {
	BlockHeight          uint64           `protobuf:"varint,1,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Validators           []*ValidatorInfo `protobuf:"bytes,2,rep,name=Validators" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ValidatorsResponse) Reset()         { *m = ValidatorsResponse{} }
func (m *ValidatorsResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorsResponse) ProtoMessage()    {}
func (*ValidatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{5}
}
func (m *ValidatorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorsResponse.Unmarshal(m, b)
}
func (m *ValidatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorsResponse.Marshal(b, m, deterministic)
}
func (dst *ValidatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorsResponse.Merge(dst, src)
}
func (m *ValidatorsResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorsResponse.Size(m)
}
func (m *ValidatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorsResponse proto.InternalMessageInfo

func (m *ValidatorsResponse) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ValidatorsResponse) GetValidators() []*ValidatorInfo {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (*ValidatorsResponse) XXX_MessageName() string {
	return "proto3.ValidatorsResponse"
}

type ListAccountsParam struct {
	Query                string   `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAccountsParam) Reset()         { *m = ListAccountsParam{} }
func (m *ListAccountsParam) String() string { return proto.CompactTextString(m) }
func (*ListAccountsParam) ProtoMessage()    {}
func (*ListAccountsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{6}
}
func (m *ListAccountsParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAccountsParam.Unmarshal(m, b)
}
func (m *ListAccountsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAccountsParam.Marshal(b, m, deterministic)
}
func (dst *ListAccountsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAccountsParam.Merge(dst, src)
}
func (m *ListAccountsParam) XXX_Size() int {
	return xxx_messageInfo_ListAccountsParam.Size(m)
}
func (m *ListAccountsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAccountsParam.DiscardUnknown(m)
}

var xxx_messageInfo_ListAccountsParam proto.InternalMessageInfo

func (m *ListAccountsParam) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (*ListAccountsParam) XXX_MessageName() string {
	return "proto3.ListAccountsParam"
}

type StorageRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageRequest) Reset()         { *m = StorageRequest{} }
func (m *StorageRequest) String() string { return proto.CompactTextString(m) }
func (*StorageRequest) ProtoMessage()    {}
func (*StorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{7}
}
func (m *StorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageRequest.Unmarshal(m, b)
}
func (m *StorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageRequest.Marshal(b, m, deterministic)
}
func (dst *StorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageRequest.Merge(dst, src)
}
func (m *StorageRequest) XXX_Size() int {
	return xxx_messageInfo_StorageRequest.Size(m)
}
func (m *StorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StorageRequest proto.InternalMessageInfo

func (m *StorageRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (*StorageRequest) XXX_MessageName() string {
	return "proto3.StorageRequest"
}

type StorageResponse struct {
	StorageItems         []StorageItem `protobuf:"bytes,1,rep,name=StorageItems" json:"StorageItems"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StorageResponse) Reset()         { *m = StorageResponse{} }
func (m *StorageResponse) String() string { return proto.CompactTextString(m) }
func (*StorageResponse) ProtoMessage()    {}
func (*StorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{8}
}
func (m *StorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResponse.Unmarshal(m, b)
}
func (m *StorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResponse.Marshal(b, m, deterministic)
}
func (dst *StorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResponse.Merge(dst, src)
}
func (m *StorageResponse) XXX_Size() int {
	return xxx_messageInfo_StorageResponse.Size(m)
}
func (m *StorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResponse proto.InternalMessageInfo

func (m *StorageResponse) GetStorageItems() []StorageItem {
	if m != nil {
		return m.StorageItems
	}
	return nil
}

func (*StorageResponse) XXX_MessageName() string {
	return "proto3.StorageResponse"
}

type StorageItem struct {
	Key                  github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,1,opt,name=Key,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"Key"`
	Value                github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,2,opt,name=Value,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"Value"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *StorageItem) Reset()         { *m = StorageItem{} }
func (m *StorageItem) String() string { return proto.CompactTextString(m) }
func (*StorageItem) ProtoMessage()    {}
func (*StorageItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{9}
}
func (m *StorageItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageItem.Unmarshal(m, b)
}
func (m *StorageItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageItem.Marshal(b, m, deterministic)
}
func (dst *StorageItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageItem.Merge(dst, src)
}
func (m *StorageItem) XXX_Size() int {
	return xxx_messageInfo_StorageItem.Size(m)
}
func (m *StorageItem) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageItem.DiscardUnknown(m)
}

var xxx_messageInfo_StorageItem proto.InternalMessageInfo

func (*StorageItem) XXX_MessageName() string {
	return "proto3.StorageItem"
}

type StorageAtRequest struct {
	Address              string                                                `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Key                  github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,2,opt,name=Key,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"Key"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *StorageAtRequest) Reset()         { *m = StorageAtRequest{} }
func (m *StorageAtRequest) String() string { return proto.CompactTextString(m) }
func (*StorageAtRequest) ProtoMessage()    {}
func (*StorageAtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{10}
}
func (m *StorageAtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageAtRequest.Unmarshal(m, b)
}
func (m *StorageAtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageAtRequest.Marshal(b, m, deterministic)
}
func (dst *StorageAtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageAtRequest.Merge(dst, src)
}
func (m *StorageAtRequest) XXX_Size() int {
	return xxx_messageInfo_StorageAtRequest.Size(m)
}
func (m *StorageAtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageAtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StorageAtRequest proto.InternalMessageInfo

func (m *StorageAtRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (*StorageAtRequest) XXX_MessageName() string {
	return "proto3.StorageAtRequest"
}

type StorageAtResponse struct {
	Key                  github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,1,opt,name=Key,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"Key"`
	Value                github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,2,opt,name=Value,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"Value"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *StorageAtResponse) Reset()         { *m = StorageAtResponse{} }
func (m *StorageAtResponse) String() string { return proto.CompactTextString(m) }
func (*StorageAtResponse) ProtoMessage()    {}
func (*StorageAtResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{11}
}
func (m *StorageAtResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageAtResponse.Unmarshal(m, b)
}
func (m *StorageAtResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageAtResponse.Marshal(b, m, deterministic)
}
func (dst *StorageAtResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageAtResponse.Merge(dst, src)
}
func (m *StorageAtResponse) XXX_Size() int {
	return xxx_messageInfo_StorageAtResponse.Size(m)
}
func (m *StorageAtResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageAtResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StorageAtResponse proto.InternalMessageInfo

func (*StorageAtResponse) XXX_MessageName() string {
	return "proto3.StorageAtResponse"
}

type ConsensusResponse struct {
	RoundState           github_com_tendermint_tendermint_consensus_types.RoundStateSimple `protobuf:"bytes,1,opt,name=RoundState,proto3,customtype=github.com/tendermint/tendermint/consensus/types.RoundStateSimple" json:"RoundState"`
	PeerRoundStates      []github_com_tendermint_tendermint_consensus_types.PeerRoundState `protobuf:"bytes,2,rep,name=PeerRoundStates,customtype=github.com/tendermint/tendermint/consensus/types.PeerRoundState" json:"PeerRoundStates"`
	XXX_NoUnkeyedLiteral struct{}                                                          `json:"-"`
	XXX_unrecognized     []byte                                                            `json:"-"`
	XXX_sizecache        int32                                                             `json:"-"`
}

func (m *ConsensusResponse) Reset()         { *m = ConsensusResponse{} }
func (m *ConsensusResponse) String() string { return proto.CompactTextString(m) }
func (*ConsensusResponse) ProtoMessage()    {}
func (*ConsensusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{12}
}
func (m *ConsensusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusResponse.Unmarshal(m, b)
}
func (m *ConsensusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusResponse.Marshal(b, m, deterministic)
}
func (dst *ConsensusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusResponse.Merge(dst, src)
}
func (m *ConsensusResponse) XXX_Size() int {
	return xxx_messageInfo_ConsensusResponse.Size(m)
}
func (m *ConsensusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusResponse proto.InternalMessageInfo

func (*ConsensusResponse) XXX_MessageName() string {
	return "proto3.ConsensusResponse"
}

type ChainResponse struct {
	ChainName            string                                                `protobuf:"bytes,1,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
	ChainId              string                                                `protobuf:"bytes,2,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	GenesisHash          github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,3,opt,name=GenesisHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"GenesisHash"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *ChainResponse) Reset()         { *m = ChainResponse{} }
func (m *ChainResponse) String() string { return proto.CompactTextString(m) }
func (*ChainResponse) ProtoMessage()    {}
func (*ChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{13}
}
func (m *ChainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainResponse.Unmarshal(m, b)
}
func (m *ChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainResponse.Marshal(b, m, deterministic)
}
func (dst *ChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainResponse.Merge(dst, src)
}
func (m *ChainResponse) XXX_Size() int {
	return xxx_messageInfo_ChainResponse.Size(m)
}
func (m *ChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChainResponse proto.InternalMessageInfo

func (m *ChainResponse) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *ChainResponse) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (*ChainResponse) XXX_MessageName() string {
	return "proto3.ChainResponse"
}

type StatusResponse struct {
	NodeInfo             github_com_gallactic_gallactic_core_consensus_tendermint_p2p.GNodeInfo `protobuf:"bytes,1,opt,name=NodeInfo,proto3,customtype=github.com/gallactic/gallactic/core/consensus/tendermint/p2p.GNodeInfo" json:"NodeInfo"`
	GenesisHash          github_com_gallactic_gallactic_common_binary.HexBytes                  `protobuf:"bytes,2,opt,name=GenesisHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"GenesisHash"`
	PubKey               github_com_gallactic_gallactic_crypto.PublicKey                        `protobuf:"bytes,3,opt,name=PubKey,proto3,customtype=github.com/gallactic/gallactic/crypto.PublicKey" json:"PubKey"`
	LatestBlockHash      github_com_gallactic_gallactic_common_binary.HexBytes                  `protobuf:"bytes,4,opt,name=LatestBlockHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"LatestBlockHash"`
	LatestBlockHeight    uint64                                                                 `protobuf:"varint,5,opt,name=LatestBlockHeight,proto3" json:"LatestBlockHeight,omitempty"`
	LatestBlockTime      int64                                                                  `protobuf:"varint,6,opt,name=LatestBlockTime,proto3" json:"LatestBlockTime,omitempty"`
	NodeVersion          string                                                                 `protobuf:"bytes,7,opt,name=NodeVersion,proto3" json:"NodeVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                 `json:"-"`
	XXX_sizecache        int32                                                                  `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{14}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (dst *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(dst, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetLatestBlockHeight() uint64 {
	if m != nil {
		return m.LatestBlockHeight
	}
	return 0
}

func (m *StatusResponse) GetLatestBlockTime() int64 {
	if m != nil {
		return m.LatestBlockTime
	}
	return 0
}

func (m *StatusResponse) GetNodeVersion() string {
	if m != nil {
		return m.NodeVersion
	}
	return ""
}

func (*StatusResponse) XXX_MessageName() string {
	return "proto3.StatusResponse"
}

type BlockRequest struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{15}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(dst, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (*BlockRequest) XXX_MessageName() string {
	return "proto3.BlockRequest"
}

type BlocksRequest struct {
	MinHeight            uint64   `protobuf:"varint,1,opt,name=minHeight,proto3" json:"minHeight,omitempty"`
	MaxHeight            uint64   `protobuf:"varint,2,opt,name=maxHeight,proto3" json:"maxHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksRequest) Reset()         { *m = BlocksRequest{} }
func (m *BlocksRequest) String() string { return proto.CompactTextString(m) }
func (*BlocksRequest) ProtoMessage()    {}
func (*BlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{16}
}
func (m *BlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksRequest.Unmarshal(m, b)
}
func (m *BlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksRequest.Marshal(b, m, deterministic)
}
func (dst *BlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksRequest.Merge(dst, src)
}
func (m *BlocksRequest) XXX_Size() int {
	return xxx_messageInfo_BlocksRequest.Size(m)
}
func (m *BlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksRequest proto.InternalMessageInfo

func (m *BlocksRequest) GetMinHeight() uint64 {
	if m != nil {
		return m.MinHeight
	}
	return 0
}

func (m *BlocksRequest) GetMaxHeight() uint64 {
	if m != nil {
		return m.MaxHeight
	}
	return 0
}

func (*BlocksRequest) XXX_MessageName() string {
	return "proto3.BlocksRequest"
}

type BlockResponse struct {
	Block                *BlockInfo `protobuf:"bytes,1,opt,name=Block" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{17}
}
func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (dst *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(dst, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetBlock() *BlockInfo {
	if m != nil {
		return m.Block
	}
	return nil
}

func (*BlockResponse) XXX_MessageName() string {
	return "proto3.BlockResponse"
}

type BlocksResponse struct {
	Blocks               []BlockInfo `protobuf:"bytes,1,rep,name=Blocks" json:"Blocks"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BlocksResponse) Reset()         { *m = BlocksResponse{} }
func (m *BlocksResponse) String() string { return proto.CompactTextString(m) }
func (*BlocksResponse) ProtoMessage()    {}
func (*BlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{18}
}
func (m *BlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksResponse.Unmarshal(m, b)
}
func (m *BlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksResponse.Marshal(b, m, deterministic)
}
func (dst *BlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksResponse.Merge(dst, src)
}
func (m *BlocksResponse) XXX_Size() int {
	return xxx_messageInfo_BlocksResponse.Size(m)
}
func (m *BlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksResponse proto.InternalMessageInfo

func (m *BlocksResponse) GetBlocks() []BlockInfo {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (*BlocksResponse) XXX_MessageName() string {
	return "proto3.BlocksResponse"
}

type GenesisResponse struct {
	Genesis              *github_com_gallactic_gallactic_core_proposal.Genesis `protobuf:"bytes,1,opt,name=Genesis,customtype=github.com/gallactic/gallactic/core/proposal.Genesis" json:"Genesis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *GenesisResponse) Reset()         { *m = GenesisResponse{} }
func (m *GenesisResponse) String() string { return proto.CompactTextString(m) }
func (*GenesisResponse) ProtoMessage()    {}
func (*GenesisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{19}
}
func (m *GenesisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisResponse.Unmarshal(m, b)
}
func (m *GenesisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisResponse.Marshal(b, m, deterministic)
}
func (dst *GenesisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisResponse.Merge(dst, src)
}
func (m *GenesisResponse) XXX_Size() int {
	return xxx_messageInfo_GenesisResponse.Size(m)
}
func (m *GenesisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisResponse proto.InternalMessageInfo

func (*GenesisResponse) XXX_MessageName() string {
	return "proto3.GenesisResponse"
}

type BlockTxsResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Txs                  []TxInfo `protobuf:"bytes,2,rep,name=Txs" json:"Txs"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockTxsResponse) Reset()         { *m = BlockTxsResponse{} }
func (m *BlockTxsResponse) String() string { return proto.CompactTextString(m) }
func (*BlockTxsResponse) ProtoMessage()    {}
func (*BlockTxsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{20}
}
func (m *BlockTxsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTxsResponse.Unmarshal(m, b)
}
func (m *BlockTxsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTxsResponse.Marshal(b, m, deterministic)
}
func (dst *BlockTxsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTxsResponse.Merge(dst, src)
}
func (m *BlockTxsResponse) XXX_Size() int {
	return xxx_messageInfo_BlockTxsResponse.Size(m)
}
func (m *BlockTxsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTxsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTxsResponse proto.InternalMessageInfo

func (m *BlockTxsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *BlockTxsResponse) GetTxs() []TxInfo {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (*BlockTxsResponse) XXX_MessageName() string {
	return "proto3.BlockTxsResponse"
}

type BlockchainInfoResponse struct {
	LastBlockHeight      uint64                                                `protobuf:"varint,1,opt,name=LastBlockHeight,proto3" json:"LastBlockHeight,omitempty"`
	LastBlockTime        time.Time                                             `protobuf:"bytes,2,opt,name=LastBlockTime,stdtime" json:"LastBlockTime"`
	LastBlockHash        github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,3,opt,name=LastBlockHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"LastBlockHash"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *BlockchainInfoResponse) Reset()         { *m = BlockchainInfoResponse{} }
func (m *BlockchainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*BlockchainInfoResponse) ProtoMessage()    {}
func (*BlockchainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{21}
}
func (m *BlockchainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainInfoResponse.Unmarshal(m, b)
}
func (m *BlockchainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainInfoResponse.Marshal(b, m, deterministic)
}
func (dst *BlockchainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainInfoResponse.Merge(dst, src)
}
func (m *BlockchainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_BlockchainInfoResponse.Size(m)
}
func (m *BlockchainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainInfoResponse proto.InternalMessageInfo

func (m *BlockchainInfoResponse) GetLastBlockHeight() uint64 {
	if m != nil {
		return m.LastBlockHeight
	}
	return 0
}

func (m *BlockchainInfoResponse) GetLastBlockTime() time.Time {
	if m != nil {
		return m.LastBlockTime
	}
	return time.Time{}
}

func (*BlockchainInfoResponse) XXX_MessageName() string {
	return "proto3.BlockchainInfoResponse"
}

type TxRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{22}
}
func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (dst *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(dst, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (*TxRequest) XXX_MessageName() string {
	return "proto3.TxRequest"
}

type TxResponse struct {
	Tx                   *TxInfo  `protobuf:"bytes,1,opt,name=Tx" json:"Tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxResponse) Reset()         { *m = TxResponse{} }
func (m *TxResponse) String() string { return proto.CompactTextString(m) }
func (*TxResponse) ProtoMessage()    {}
func (*TxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{23}
}
func (m *TxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxResponse.Unmarshal(m, b)
}
func (m *TxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxResponse.Marshal(b, m, deterministic)
}
func (dst *TxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxResponse.Merge(dst, src)
}
func (m *TxResponse) XXX_Size() int {
	return xxx_messageInfo_TxResponse.Size(m)
}
func (m *TxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TxResponse proto.InternalMessageInfo

func (m *TxResponse) GetTx() *TxInfo {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (*TxResponse) XXX_MessageName() string {
	return "proto3.TxResponse"
}

type BlockInfo struct {
	Header               HeaderInfo     `protobuf:"bytes,1,opt,name=header" json:"header"`
	LastCommitInfo       CommitInfo     `protobuf:"bytes,2,opt,name=last_commit_info,json=lastCommitInfo" json:"last_commit_info"`
	ByzantineValidators  []EvidenceInfo `protobuf:"bytes,3,rep,name=byzantine_validators,json=byzantineValidators" json:"byzantine_validators"`
	Txs                  []TxInfo       `protobuf:"bytes,4,rep,name=Txs" json:"Txs"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{24}
}
func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (dst *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(dst, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetHeader() HeaderInfo {
	if m != nil {
		return m.Header
	}
	return HeaderInfo{}
}

func (m *BlockInfo) GetLastCommitInfo() CommitInfo {
	if m != nil {
		return m.LastCommitInfo
	}
	return CommitInfo{}
}

func (m *BlockInfo) GetByzantineValidators() []EvidenceInfo {
	if m != nil {
		return m.ByzantineValidators
	}
	return nil
}

func (m *BlockInfo) GetTxs() []TxInfo {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (*BlockInfo) XXX_MessageName() string {
	return "proto3.BlockInfo"
}

type HeaderInfo struct {
	// basic block info
	BlockHash github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"block_hash"`
	Version   Version                                               `protobuf:"bytes,2,opt,name=version" json:"version"`
	ChainID   string                                                `protobuf:"bytes,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Height    int64                                                 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Time      time.Time                                             `protobuf:"bytes,5,opt,name=time,stdtime" json:"time"`
	NumTxs    int64                                                 `protobuf:"varint,6,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	TotalTxs  int64                                                 `protobuf:"varint,7,opt,name=total_txs,json=totalTxs,proto3" json:"total_txs,omitempty"`
	// prev block info
	LastBlockId []byte `protobuf:"bytes,8,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	// hashes of block data
	LastCommitHash github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,9,opt,name=last_commit_hash,json=lastCommitHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"last_commit_hash"`
	DataHash       github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,10,opt,name=data_hash,json=dataHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"data_hash"`
	// hashes from the app output from the prev block
	ValidatorsHash     github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,11,opt,name=validators_hash,json=validatorsHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"validators_hash"`
	NextValidatorsHash github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,12,opt,name=next_validators_hash,json=nextValidatorsHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"next_validators_hash"`
	ConsensusHash      github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,13,opt,name=consensus_hash,json=consensusHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"consensus_hash"`
	AppHash            github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,14,opt,name=app_hash,json=appHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"app_hash"`
	LastResultsHash    github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,15,opt,name=last_results_hash,json=lastResultsHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"last_results_hash"`
	// consensus info
	EvidenceHash         github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,16,opt,name=evidence_hash,json=evidenceHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"evidence_hash"`
	ProposerAddress      string                                                `protobuf:"bytes,17,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *HeaderInfo) Reset()         { *m = HeaderInfo{} }
func (m *HeaderInfo) String() string { return proto.CompactTextString(m) }
func (*HeaderInfo) ProtoMessage()    {}
func (*HeaderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{25}
}
func (m *HeaderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderInfo.Unmarshal(m, b)
}
func (m *HeaderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderInfo.Marshal(b, m, deterministic)
}
func (dst *HeaderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderInfo.Merge(dst, src)
}
func (m *HeaderInfo) XXX_Size() int {
	return xxx_messageInfo_HeaderInfo.Size(m)
}
func (m *HeaderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderInfo proto.InternalMessageInfo

func (m *HeaderInfo) GetVersion() Version {
	if m != nil {
		return m.Version
	}
	return Version{}
}

func (m *HeaderInfo) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *HeaderInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *HeaderInfo) GetTime() time.Time {
	if m != nil {
		return m.Time
	}
	return time.Time{}
}

func (m *HeaderInfo) GetNumTxs() int64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *HeaderInfo) GetTotalTxs() int64 {
	if m != nil {
		return m.TotalTxs
	}
	return 0
}

func (m *HeaderInfo) GetLastBlockId() []byte {
	if m != nil {
		return m.LastBlockId
	}
	return nil
}

func (m *HeaderInfo) GetProposerAddress() string {
	if m != nil {
		return m.ProposerAddress
	}
	return ""
}

func (*HeaderInfo) XXX_MessageName() string {
	return "proto3.HeaderInfo"
}

type Version struct {
	Block                uint64   `protobuf:"varint,1,opt,name=Block,proto3" json:"Block,omitempty"`
	App                  uint64   `protobuf:"varint,2,opt,name=App,proto3" json:"App,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{26}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *Version) GetApp() uint64 {
	if m != nil {
		return m.App
	}
	return 0
}

func (*Version) XXX_MessageName() string {
	return "proto3.Version"
}

type CommitInfo struct {
	BlockHash            github_com_gallactic_gallactic_common_binary.HexBytes `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3,customtype=github.com/gallactic/gallactic/common/binary.HexBytes" json:"block_hash"`
	Votes                []VoteInfo                                            `protobuf:"bytes,2,rep,name=votes" json:"votes"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CommitInfo) Reset()         { *m = CommitInfo{} }
func (m *CommitInfo) String() string { return proto.CompactTextString(m) }
func (*CommitInfo) ProtoMessage()    {}
func (*CommitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{27}
}
func (m *CommitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitInfo.Unmarshal(m, b)
}
func (m *CommitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitInfo.Marshal(b, m, deterministic)
}
func (dst *CommitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitInfo.Merge(dst, src)
}
func (m *CommitInfo) XXX_Size() int {
	return xxx_messageInfo_CommitInfo.Size(m)
}
func (m *CommitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommitInfo proto.InternalMessageInfo

func (m *CommitInfo) GetVotes() []VoteInfo {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (*CommitInfo) XXX_MessageName() string {
	return "proto3.CommitInfo"
}

type VoteInfo struct {
	ValidatorAddress     string    `protobuf:"bytes,1,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Signature            []byte    `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Round                int32     `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Height               int64     `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Time                 time.Time `protobuf:"bytes,5,opt,name=time,stdtime" json:"time"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VoteInfo) Reset()         { *m = VoteInfo{} }
func (m *VoteInfo) String() string { return proto.CompactTextString(m) }
func (*VoteInfo) ProtoMessage()    {}
func (*VoteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{28}
}
func (m *VoteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteInfo.Unmarshal(m, b)
}
func (m *VoteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteInfo.Marshal(b, m, deterministic)
}
func (dst *VoteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteInfo.Merge(dst, src)
}
func (m *VoteInfo) XXX_Size() int {
	return xxx_messageInfo_VoteInfo.Size(m)
}
func (m *VoteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VoteInfo proto.InternalMessageInfo

func (m *VoteInfo) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

func (m *VoteInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *VoteInfo) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *VoteInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VoteInfo) GetTime() time.Time {
	if m != nil {
		return m.Time
	}
	return time.Time{}
}

func (*VoteInfo) XXX_MessageName() string {
	return "proto3.VoteInfo"
}

type ValidatorInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey               string   `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Power                int64    `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"`
	Stake                uint64   `protobuf:"varint,4,opt,name=stake,proto3" json:"stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorInfo) Reset()         { *m = ValidatorInfo{} }
func (m *ValidatorInfo) String() string { return proto.CompactTextString(m) }
func (*ValidatorInfo) ProtoMessage()    {}
func (*ValidatorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{29}
}
func (m *ValidatorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorInfo.Unmarshal(m, b)
}
func (m *ValidatorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorInfo.Marshal(b, m, deterministic)
}
func (dst *ValidatorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorInfo.Merge(dst, src)
}
func (m *ValidatorInfo) XXX_Size() int {
	return xxx_messageInfo_ValidatorInfo.Size(m)
}
func (m *ValidatorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorInfo proto.InternalMessageInfo

func (m *ValidatorInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ValidatorInfo) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *ValidatorInfo) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *ValidatorInfo) GetStake() uint64 {
	if m != nil {
		return m.Stake
	}
	return 0
}

func (*ValidatorInfo) XXX_MessageName() string {
	return "proto3.ValidatorInfo"
}

type EvidenceInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height               int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvidenceInfo) Reset()         { *m = EvidenceInfo{} }
func (m *EvidenceInfo) String() string { return proto.CompactTextString(m) }
func (*EvidenceInfo) ProtoMessage()    {}
func (*EvidenceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{30}
}
func (m *EvidenceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvidenceInfo.Unmarshal(m, b)
}
func (m *EvidenceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvidenceInfo.Marshal(b, m, deterministic)
}
func (dst *EvidenceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvidenceInfo.Merge(dst, src)
}
func (m *EvidenceInfo) XXX_Size() int {
	return xxx_messageInfo_EvidenceInfo.Size(m)
}
func (m *EvidenceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EvidenceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EvidenceInfo proto.InternalMessageInfo

func (m *EvidenceInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EvidenceInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (*EvidenceInfo) XXX_MessageName() string {
	return "proto3.EvidenceInfo"
}

type TxInfo struct {
	Height               int64    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	GasUsed              int64    `protobuf:"varint,3,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	GasWanted            int64    `protobuf:"varint,4,opt,name=GasWanted,proto3" json:"GasWanted,omitempty"`
	Envelope             string   `protobuf:"bytes,5,opt,name=Envelope,proto3" json:"Envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInfo) Reset()         { *m = TxInfo{} }
func (m *TxInfo) String() string { return proto.CompactTextString(m) }
func (*TxInfo) ProtoMessage()    {}
func (*TxInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_dd947a8111f90b5d, []int{31}
}
func (m *TxInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInfo.Unmarshal(m, b)
}
func (m *TxInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInfo.Marshal(b, m, deterministic)
}
func (dst *TxInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInfo.Merge(dst, src)
}
func (m *TxInfo) XXX_Size() int {
	return xxx_messageInfo_TxInfo.Size(m)
}
func (m *TxInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TxInfo proto.InternalMessageInfo

func (m *TxInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TxInfo) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TxInfo) GetGasUsed() int64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *TxInfo) GetGasWanted() int64 {
	if m != nil {
		return m.GasWanted
	}
	return 0
}

func (m *TxInfo) GetEnvelope() string {
	if m != nil {
		return m.Envelope
	}
	return ""
}

func (*TxInfo) XXX_MessageName() string {
	return "proto3.TxInfo"
}
func init() {
	proto.RegisterType((*Empty)(nil), "proto3.Empty")
	golang_proto.RegisterType((*Empty)(nil), "proto3.Empty")
	proto.RegisterType((*AddressRequest)(nil), "proto3.AddressRequest")
	golang_proto.RegisterType((*AddressRequest)(nil), "proto3.AddressRequest")
	proto.RegisterType((*AccountResponse)(nil), "proto3.AccountResponse")
	golang_proto.RegisterType((*AccountResponse)(nil), "proto3.AccountResponse")
	proto.RegisterType((*AccountsResponse)(nil), "proto3.AccountsResponse")
	golang_proto.RegisterType((*AccountsResponse)(nil), "proto3.AccountsResponse")
	proto.RegisterType((*ValidatorResponse)(nil), "proto3.ValidatorResponse")
	golang_proto.RegisterType((*ValidatorResponse)(nil), "proto3.ValidatorResponse")
	proto.RegisterType((*ValidatorsResponse)(nil), "proto3.ValidatorsResponse")
	golang_proto.RegisterType((*ValidatorsResponse)(nil), "proto3.ValidatorsResponse")
	proto.RegisterType((*ListAccountsParam)(nil), "proto3.ListAccountsParam")
	golang_proto.RegisterType((*ListAccountsParam)(nil), "proto3.ListAccountsParam")
	proto.RegisterType((*StorageRequest)(nil), "proto3.StorageRequest")
	golang_proto.RegisterType((*StorageRequest)(nil), "proto3.StorageRequest")
	proto.RegisterType((*StorageResponse)(nil), "proto3.StorageResponse")
	golang_proto.RegisterType((*StorageResponse)(nil), "proto3.StorageResponse")
	proto.RegisterType((*StorageItem)(nil), "proto3.StorageItem")
	golang_proto.RegisterType((*StorageItem)(nil), "proto3.StorageItem")
	proto.RegisterType((*StorageAtRequest)(nil), "proto3.StorageAtRequest")
	golang_proto.RegisterType((*StorageAtRequest)(nil), "proto3.StorageAtRequest")
	proto.RegisterType((*StorageAtResponse)(nil), "proto3.StorageAtResponse")
	golang_proto.RegisterType((*StorageAtResponse)(nil), "proto3.StorageAtResponse")
	proto.RegisterType((*ConsensusResponse)(nil), "proto3.ConsensusResponse")
	golang_proto.RegisterType((*ConsensusResponse)(nil), "proto3.ConsensusResponse")
	proto.RegisterType((*ChainResponse)(nil), "proto3.ChainResponse")
	golang_proto.RegisterType((*ChainResponse)(nil), "proto3.ChainResponse")
	proto.RegisterType((*StatusResponse)(nil), "proto3.StatusResponse")
	golang_proto.RegisterType((*StatusResponse)(nil), "proto3.StatusResponse")
	proto.RegisterType((*BlockRequest)(nil), "proto3.BlockRequest")
	golang_proto.RegisterType((*BlockRequest)(nil), "proto3.BlockRequest")
	proto.RegisterType((*BlocksRequest)(nil), "proto3.BlocksRequest")
	golang_proto.RegisterType((*BlocksRequest)(nil), "proto3.BlocksRequest")
	proto.RegisterType((*BlockResponse)(nil), "proto3.BlockResponse")
	golang_proto.RegisterType((*BlockResponse)(nil), "proto3.BlockResponse")
	proto.RegisterType((*BlocksResponse)(nil), "proto3.BlocksResponse")
	golang_proto.RegisterType((*BlocksResponse)(nil), "proto3.BlocksResponse")
	proto.RegisterType((*GenesisResponse)(nil), "proto3.GenesisResponse")
	golang_proto.RegisterType((*GenesisResponse)(nil), "proto3.GenesisResponse")
	proto.RegisterType((*BlockTxsResponse)(nil), "proto3.BlockTxsResponse")
	golang_proto.RegisterType((*BlockTxsResponse)(nil), "proto3.BlockTxsResponse")
	proto.RegisterType((*BlockchainInfoResponse)(nil), "proto3.BlockchainInfoResponse")
	golang_proto.RegisterType((*BlockchainInfoResponse)(nil), "proto3.BlockchainInfoResponse")
	proto.RegisterType((*TxRequest)(nil), "proto3.TxRequest")
	golang_proto.RegisterType((*TxRequest)(nil), "proto3.TxRequest")
	proto.RegisterType((*TxResponse)(nil), "proto3.TxResponse")
	golang_proto.RegisterType((*TxResponse)(nil), "proto3.TxResponse")
	proto.RegisterType((*BlockInfo)(nil), "proto3.BlockInfo")
	golang_proto.RegisterType((*BlockInfo)(nil), "proto3.BlockInfo")
	proto.RegisterType((*HeaderInfo)(nil), "proto3.HeaderInfo")
	golang_proto.RegisterType((*HeaderInfo)(nil), "proto3.HeaderInfo")
	proto.RegisterType((*Version)(nil), "proto3.Version")
	golang_proto.RegisterType((*Version)(nil), "proto3.Version")
	proto.RegisterType((*CommitInfo)(nil), "proto3.CommitInfo")
	golang_proto.RegisterType((*CommitInfo)(nil), "proto3.CommitInfo")
	proto.RegisterType((*VoteInfo)(nil), "proto3.VoteInfo")
	golang_proto.RegisterType((*VoteInfo)(nil), "proto3.VoteInfo")
	proto.RegisterType((*ValidatorInfo)(nil), "proto3.ValidatorInfo")
	golang_proto.RegisterType((*ValidatorInfo)(nil), "proto3.ValidatorInfo")
	proto.RegisterType((*EvidenceInfo)(nil), "proto3.EvidenceInfo")
	golang_proto.RegisterType((*EvidenceInfo)(nil), "proto3.EvidenceInfo")
	proto.RegisterType((*TxInfo)(nil), "proto3.TxInfo")
	golang_proto.RegisterType((*TxInfo)(nil), "proto3.TxInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockChainClient is the client API for BlockChain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockChainClient interface {
	GetAccount(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AccountResponse, error)
	GetAccounts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AccountsResponse, error)
	GetStorage(ctx context.Context, in *StorageRequest, opts ...grpc.CallOption) (*StorageResponse, error)
	GetStorageAt(ctx context.Context, in *StorageAtRequest, opts ...grpc.CallOption) (*StorageAtResponse, error)
	GetValidator(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidatorResponse, error)
	GetValidators(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsResponse, error)
	GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatusResponse, error)
	GetGenesis(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GenesisResponse, error)
	GetChainID(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChainResponse, error)
	GetLatestBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockResponse, error)
	GetConsensusState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ConsensusResponse, error)
	GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	GetBlocks(ctx context.Context, in *BlocksRequest, opts ...grpc.CallOption) (*BlocksResponse, error)
	GetBlockchainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockchainInfoResponse, error)
	GetTx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*TxResponse, error)
	GetListTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TxInfo, error)
	GetBlockTxs(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockTxsResponse, error)
}

type blockChainClient struct {
	cc *grpc.ClientConn
}

func NewBlockChainClient(cc *grpc.ClientConn) BlockChainClient {
	return &blockChainClient{cc}
}

func (c *blockChainClient) GetAccount(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AccountResponse, error) {
	out := new(AccountResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetAccounts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetStorage(ctx context.Context, in *StorageRequest, opts ...grpc.CallOption) (*StorageResponse, error) {
	out := new(StorageResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetStorageAt(ctx context.Context, in *StorageAtRequest, opts ...grpc.CallOption) (*StorageAtResponse, error) {
	out := new(StorageAtResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetStorageAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetValidator(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*ValidatorResponse, error) {
	out := new(ValidatorResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetValidators(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsResponse, error) {
	out := new(ValidatorsResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetValidators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetGenesis(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GenesisResponse, error) {
	out := new(GenesisResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetGenesis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetChainID(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChainResponse, error) {
	out := new(ChainResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetChainID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetLatestBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetLatestBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetConsensusState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ConsensusResponse, error) {
	out := new(ConsensusResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetConsensusState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetBlocks(ctx context.Context, in *BlocksRequest, opts ...grpc.CallOption) (*BlocksResponse, error) {
	out := new(BlocksResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetBlockchainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BlockchainInfoResponse, error) {
	out := new(BlockchainInfoResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetTx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*TxResponse, error) {
	out := new(TxResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetListTx(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TxInfo, error) {
	out := new(TxInfo)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetListTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetBlockTxs(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockTxsResponse, error) {
	out := new(BlockTxsResponse)
	err := c.cc.Invoke(ctx, "/proto3.BlockChain/GetBlockTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockChainServer is the server API for BlockChain service.
type BlockChainServer interface {
	GetAccount(context.Context, *AddressRequest) (*AccountResponse, error)
	GetAccounts(context.Context, *Empty) (*AccountsResponse, error)
	GetStorage(context.Context, *StorageRequest) (*StorageResponse, error)
	GetStorageAt(context.Context, *StorageAtRequest) (*StorageAtResponse, error)
	GetValidator(context.Context, *AddressRequest) (*ValidatorResponse, error)
	GetValidators(context.Context, *Empty) (*ValidatorsResponse, error)
	GetStatus(context.Context, *Empty) (*StatusResponse, error)
	GetGenesis(context.Context, *Empty) (*GenesisResponse, error)
	GetChainID(context.Context, *Empty) (*ChainResponse, error)
	GetLatestBlock(context.Context, *Empty) (*BlockResponse, error)
	GetConsensusState(context.Context, *Empty) (*ConsensusResponse, error)
	GetBlock(context.Context, *BlockRequest) (*BlockResponse, error)
	GetBlocks(context.Context, *BlocksRequest) (*BlocksResponse, error)
	GetBlockchainInfo(context.Context, *Empty) (*BlockchainInfoResponse, error)
	GetTx(context.Context, *TxRequest) (*TxResponse, error)
	GetListTx(context.Context, *Empty) (*TxInfo, error)
	GetBlockTxs(context.Context, *BlockRequest) (*BlockTxsResponse, error)
}

func RegisterBlockChainServer(s *grpc.Server, srv BlockChainServer) {
	s.RegisterService(&_BlockChain_serviceDesc, srv)
}

func _BlockChain_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetAccount(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetAccounts(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetStorage(ctx, req.(*StorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetStorageAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StorageAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetStorageAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetStorageAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetStorageAt(ctx, req.(*StorageAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetValidator(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetValidators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetValidators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetValidators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetValidators(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetStatus(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetGenesis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetGenesis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetGenesis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetGenesis(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetChainID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetChainID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetChainID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetChainID(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetLatestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetLatestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetLatestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetLatestBlock(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetConsensusState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetConsensusState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetConsensusState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetConsensusState(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlocks(ctx, req.(*BlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlockchainInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetTx(ctx, req.(*TxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetListTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetListTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetListTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetListTx(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetBlockTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetBlockTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.BlockChain/GetBlockTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetBlockTxs(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockChain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto3.BlockChain",
	HandlerType: (*BlockChainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _BlockChain_GetAccount_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _BlockChain_GetAccounts_Handler,
		},
		{
			MethodName: "GetStorage",
			Handler:    _BlockChain_GetStorage_Handler,
		},
		{
			MethodName: "GetStorageAt",
			Handler:    _BlockChain_GetStorageAt_Handler,
		},
		{
			MethodName: "GetValidator",
			Handler:    _BlockChain_GetValidator_Handler,
		},
		{
			MethodName: "GetValidators",
			Handler:    _BlockChain_GetValidators_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _BlockChain_GetStatus_Handler,
		},
		{
			MethodName: "GetGenesis",
			Handler:    _BlockChain_GetGenesis_Handler,
		},
		{
			MethodName: "GetChainID",
			Handler:    _BlockChain_GetChainID_Handler,
		},
		{
			MethodName: "GetLatestBlock",
			Handler:    _BlockChain_GetLatestBlock_Handler,
		},
		{
			MethodName: "GetConsensusState",
			Handler:    _BlockChain_GetConsensusState_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockChain_GetBlock_Handler,
		},
		{
			MethodName: "GetBlocks",
			Handler:    _BlockChain_GetBlocks_Handler,
		},
		{
			MethodName: "GetBlockchainInfo",
			Handler:    _BlockChain_GetBlockchainInfo_Handler,
		},
		{
			MethodName: "GetTx",
			Handler:    _BlockChain_GetTx_Handler,
		},
		{
			MethodName: "GetListTx",
			Handler:    _BlockChain_GetListTx_Handler,
		},
		{
			MethodName: "GetBlockTxs",
			Handler:    _BlockChain_GetBlockTxs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/grpc/proto3/blockchain.proto",
}

func (m *Empty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddressRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AccountsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BlockHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.BlockHeight))
	}
	if len(m.Accounts) > 0 {
		for _, e := range m.Accounts {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Validator != nil {
		l = m.Validator.Size()
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidatorsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BlockHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.BlockHeight))
	}
	if len(m.Validators) > 0 {
		for _, e := range m.Validators {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAccountsParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.StorageItems) > 0 {
		for _, e := range m.StorageItems {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Key.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.Value.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageAtRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = m.Key.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StorageAtResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Key.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.Value.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConsensusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.RoundState.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if len(m.PeerRoundStates) > 0 {
		for _, e := range m.PeerRoundStates {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = len(m.ChainId)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = m.GenesisHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.NodeInfo.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.GenesisHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.PubKey.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.LatestBlockHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.LatestBlockHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.LatestBlockHeight))
	}
	if m.LatestBlockTime != 0 {
		n += 1 + sovBlockchain(uint64(m.LatestBlockTime))
	}
	l = len(m.NodeVersion)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovBlockchain(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlocksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MinHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.MinHeight))
	}
	if m.MaxHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.MaxHeight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Block != nil {
		l = m.Block.Size()
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlocksResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Blocks) > 0 {
		for _, e := range m.Blocks {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GenesisResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Genesis != nil {
		l = m.Genesis.Size()
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockTxsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Count != 0 {
		n += 1 + sovBlockchain(uint64(m.Count))
	}
	if len(m.Txs) > 0 {
		for _, e := range m.Txs {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockchainInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastBlockHeight != 0 {
		n += 1 + sovBlockchain(uint64(m.LastBlockHeight))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastBlockTime)
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.LastBlockHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TxRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TxResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Tx != nil {
		l = m.Tx.Size()
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Header.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.LastCommitInfo.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if len(m.ByzantineValidators) > 0 {
		for _, e := range m.ByzantineValidators {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if len(m.Txs) > 0 {
		for _, e := range m.Txs {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HeaderInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.BlockHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.Version.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovBlockchain(uint64(m.Height))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Time)
	n += 1 + l + sovBlockchain(uint64(l))
	if m.NumTxs != 0 {
		n += 1 + sovBlockchain(uint64(m.NumTxs))
	}
	if m.TotalTxs != 0 {
		n += 1 + sovBlockchain(uint64(m.TotalTxs))
	}
	l = len(m.LastBlockId)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = m.LastCommitHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.DataHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.ValidatorsHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.NextValidatorsHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.ConsensusHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.AppHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.LastResultsHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	l = m.EvidenceHash.Size()
	n += 2 + l + sovBlockchain(uint64(l))
	l = len(m.ProposerAddress)
	if l > 0 {
		n += 2 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Version) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Block != 0 {
		n += 1 + sovBlockchain(uint64(m.Block))
	}
	if m.App != 0 {
		n += 1 + sovBlockchain(uint64(m.App))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommitInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.BlockHash.Size()
	n += 1 + l + sovBlockchain(uint64(l))
	if len(m.Votes) > 0 {
		for _, e := range m.Votes {
			l = e.Size()
			n += 1 + l + sovBlockchain(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.Round != 0 {
		n += 1 + sovBlockchain(uint64(m.Round))
	}
	if m.Height != 0 {
		n += 1 + sovBlockchain(uint64(m.Height))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Time)
	n += 1 + l + sovBlockchain(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidatorInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	l = len(m.PubKey)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.Power != 0 {
		n += 1 + sovBlockchain(uint64(m.Power))
	}
	if m.Stake != 0 {
		n += 1 + sovBlockchain(uint64(m.Stake))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EvidenceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovBlockchain(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TxInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovBlockchain(uint64(m.Height))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.GasUsed != 0 {
		n += 1 + sovBlockchain(uint64(m.GasUsed))
	}
	if m.GasWanted != 0 {
		n += 1 + sovBlockchain(uint64(m.GasWanted))
	}
	l = len(m.Envelope)
	if l > 0 {
		n += 1 + l + sovBlockchain(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBlockchain(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBlockchain(x uint64) (n int) {
	return sovBlockchain(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

func init() {
	proto.RegisterFile("rpc/grpc/proto3/blockchain.proto", fileDescriptor_blockchain_dd947a8111f90b5d)
}
func init() {
	golang_proto.RegisterFile("rpc/grpc/proto3/blockchain.proto", fileDescriptor_blockchain_dd947a8111f90b5d)
}

var fileDescriptor_blockchain_dd947a8111f90b5d = []byte{
	// 2063 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4f, 0x73, 0x1b, 0x59,
	0x11, 0x8f, 0x64, 0xc9, 0xd2, 0xb4, 0x2c, 0x4b, 0x7a, 0x11, 0x8e, 0x22, 0x5c, 0xb6, 0x19, 0xaa,
	0xb2, 0x59, 0x08, 0x1a, 0x88, 0xd9, 0xda, 0x5c, 0x16, 0xb0, 0x9c, 0xac, 0x6c, 0x12, 0x12, 0x33,
	0x11, 0x06, 0xb6, 0x28, 0x54, 0x23, 0xe9, 0x45, 0x9e, 0x8d, 0x34, 0x33, 0xcc, 0x3c, 0x19, 0x09,
	0x97, 0x39, 0x70, 0xe2, 0x00, 0x55, 0x50, 0x5c, 0x38, 0x72, 0xa2, 0xb8, 0x73, 0xe2, 0x40, 0x15,
	0x37, 0x72, 0xa4, 0x8a, 0x5b, 0x0e, 0x86, 0x4a, 0xf8, 0x06, 0x5c, 0x38, 0x52, 0xef, 0xef, 0xbc,
	0x19, 0xe1, 0x75, 0xb6, 0x56, 0x1c, 0xf6, 0xe2, 0xd2, 0xeb, 0x7e, 0xfd, 0xeb, 0x7e, 0xdd, 0x3d,
	0xfd, 0xba, 0x9f, 0x61, 0x27, 0x0c, 0x06, 0xd6, 0x88, 0xfe, 0x09, 0x42, 0x9f, 0xf8, 0xbb, 0x56,
	0x7f, 0xec, 0x0f, 0x9e, 0x0f, 0x4e, 0x1c, 0xd7, 0x6b, 0x31, 0x0a, 0x5a, 0xe5, 0x8c, 0xe6, 0x97,
	0x46, 0x2e, 0x39, 0x99, 0xf6, 0x5b, 0x03, 0x7f, 0x62, 0x8d, 0xfc, 0x91, 0xcf, 0x05, 0xfa, 0xd3,
	0x67, 0x6c, 0xc5, 0x16, 0xec, 0x17, 0x17, 0x6b, 0x6e, 0x8e, 0x7c, 0x7f, 0x34, 0xc6, 0x96, 0x13,
	0xb8, 0x96, 0xe3, 0x79, 0x3e, 0x71, 0x88, 0xeb, 0x7b, 0x91, 0xe0, 0x6e, 0x0b, 0xae, 0xc2, 0x20,
	0xee, 0x04, 0x47, 0xc4, 0x99, 0x04, 0x7c, 0x83, 0x59, 0x80, 0xfc, 0x83, 0x49, 0x40, 0xe6, 0xe6,
	0x17, 0x60, 0x7d, 0x6f, 0x38, 0x0c, 0x71, 0x14, 0xd9, 0xf8, 0x47, 0x53, 0x1c, 0x11, 0xd4, 0x80,
	0x82, 0xa0, 0x34, 0x32, 0x3b, 0x99, 0xdb, 0x86, 0x2d, 0x97, 0xe6, 0x39, 0x54, 0xf6, 0x06, 0x03,
	0x7f, 0xea, 0x11, 0x1b, 0x47, 0x81, 0xef, 0x45, 0x18, 0x7d, 0x08, 0x05, 0x41, 0x62, 0x9b, 0x4b,
	0x77, 0x6f, 0x70, 0x05, 0xbb, 0xad, 0xd4, 0xce, 0xf6, 0xbb, 0x2f, 0x2f, 0xb6, 0x77, 0xf5, 0x33,
	0x3a, 0xe3, 0xb1, 0x33, 0x20, 0xee, 0x40, 0xfb, 0x35, 0xf0, 0x43, 0x6c, 0x39, 0x5c, 0x50, 0x01,
	0x48, 0x05, 0xa6, 0x0b, 0x55, 0xf1, 0x33, 0x52, 0xfa, 0x77, 0xa0, 0xd4, 0xa6, 0x1e, 0x3d, 0xc0,
	0xee, 0xe8, 0x84, 0xdb, 0x90, 0xb3, 0x75, 0x12, 0xda, 0x85, 0xa2, 0x94, 0x6a, 0x64, 0x77, 0x56,
	0x3e, 0xc2, 0x44, 0x5b, 0x6d, 0x34, 0x0f, 0xa0, 0x76, 0xec, 0x8c, 0xdd, 0xa1, 0x43, 0xfc, 0x50,
	0xe9, 0xda, 0x05, 0x43, 0x11, 0xc5, 0x69, 0x3f, 0x23, 0xa1, 0x14, 0xe3, 0xd0, 0x7b, 0xe6, 0xdb,
	0xf1, 0x3e, 0x73, 0x02, 0x48, 0x2d, 0x3e, 0x8e, 0xd9, 0xef, 0x00, 0xc4, 0x72, 0xc2, 0xf0, 0x4b,
	0xb4, 0x69, 0x1b, 0xcd, 0xb7, 0xa1, 0xf6, 0xc8, 0x8d, 0x88, 0x3c, 0xc8, 0x91, 0x13, 0x3a, 0x13,
	0x54, 0x87, 0xfc, 0xb7, 0xa7, 0x38, 0x9c, 0x8b, 0x78, 0xf2, 0x05, 0x8d, 0xfc, 0x53, 0xe2, 0x87,
	0xce, 0x08, 0x5f, 0x1d, 0xf9, 0x23, 0xa8, 0xa8, 0xbd, 0xe2, 0x08, 0xef, 0xc1, 0x9a, 0x20, 0x1d,
	0x12, 0x3c, 0xa1, 0x12, 0xd4, 0xc4, 0xeb, 0xd2, 0x44, 0x8d, 0xd7, 0xce, 0xbd, 0xb8, 0xd8, 0xbe,
	0x66, 0x27, 0xb6, 0x9b, 0x7f, 0xcc, 0x40, 0x49, 0x23, 0xa0, 0x27, 0xb0, 0xf2, 0x10, 0x73, 0x0b,
	0xd7, 0xda, 0xef, 0x51, 0x81, 0x97, 0x17, 0xdb, 0xef, 0x5c, 0x99, 0x2f, 0x93, 0x89, 0xef, 0x59,
	0x7d, 0xd7, 0x73, 0xc2, 0x79, 0xeb, 0x00, 0xcf, 0xda, 0x73, 0x82, 0x23, 0x9b, 0x22, 0xa1, 0xa7,
	0x90, 0x3f, 0x76, 0xc6, 0x53, 0xdc, 0xc8, 0x2e, 0x03, 0x92, 0x63, 0x99, 0xe7, 0x50, 0x15, 0x46,
	0xef, 0x91, 0x2b, 0xbd, 0x26, 0xcf, 0x94, 0x5d, 0xd6, 0x99, 0xcc, 0x3f, 0x65, 0xa0, 0xa6, 0xe9,
	0x17, 0x91, 0xf8, 0x74, 0xb8, 0xee, 0x97, 0x59, 0xa8, 0xed, 0x53, 0x7b, 0xbd, 0x68, 0x1a, 0x7f,
	0x08, 0x2e, 0x80, 0xed, 0x4f, 0xbd, 0xe1, 0x53, 0xe2, 0x10, 0x2c, 0x8e, 0x70, 0x28, 0xf4, 0xed,
	0x69, 0xfa, 0x08, 0xf6, 0x86, 0x38, 0x9c, 0xb8, 0x1e, 0xd1, 0x7f, 0x0e, 0x24, 0x9e, 0x45, 0xe6,
	0x01, 0x8e, 0x5a, 0x31, 0xd4, 0x53, 0x77, 0x12, 0x8c, 0xb1, 0xad, 0x81, 0xa3, 0x5f, 0x64, 0xa0,
	0x72, 0x84, 0x71, 0x18, 0x93, 0xe4, 0x77, 0x75, 0x53, 0x26, 0xed, 0x82, 0x7d, 0xed, 0x8e, 0xb0,
	0xe5, 0xeb, 0x1f, 0xdb, 0x96, 0xa4, 0x2a, 0x3b, 0xad, 0xda, 0xfc, 0x43, 0x06, 0xca, 0xfb, 0xf4,
	0x1e, 0x50, 0xbe, 0xd8, 0x04, 0x83, 0x11, 0x1e, 0x3b, 0x13, 0x2c, 0x52, 0x29, 0x26, 0xd0, 0x34,
	0x63, 0x8b, 0xc3, 0x21, 0x0b, 0x8b, 0x61, 0xcb, 0x25, 0xea, 0x41, 0xa9, 0x83, 0x3d, 0x1c, 0xb9,
	0xd1, 0x81, 0x13, 0x9d, 0x34, 0x56, 0x96, 0x11, 0x34, 0x1d, 0xd1, 0xfc, 0x75, 0x8e, 0x96, 0x0a,
	0x87, 0x68, 0x71, 0xfb, 0x10, 0x8a, 0x8f, 0xfd, 0x21, 0xa6, 0xf5, 0x47, 0x44, 0xed, 0xb1, 0x50,
	0xf8, 0xfe, 0x9b, 0xd4, 0x78, 0xcd, 0x59, 0xb1, 0x07, 0x83, 0xbb, 0x41, 0xab, 0x23, 0x51, 0x6d,
	0x85, 0x9f, 0x3e, 0x5f, 0x76, 0xd9, 0xe7, 0x43, 0x4f, 0x60, 0xf5, 0x68, 0xda, 0xa7, 0xdf, 0x10,
	0xf7, 0xdd, 0xbb, 0x02, 0xdb, 0xba, 0x0a, 0x3b, 0x9c, 0x07, 0xc4, 0x6f, 0x1d, 0x4d, 0xfb, 0x63,
	0x77, 0xf0, 0x10, 0xcf, 0x6d, 0x01, 0x83, 0x46, 0x50, 0x79, 0x44, 0x83, 0x4c, 0x78, 0x45, 0xa7,
	0x56, 0xe7, 0x96, 0x61, 0x75, 0x1a, 0x15, 0xdd, 0x81, 0x9a, 0x4e, 0xe2, 0xb7, 0x49, 0x9e, 0xdd,
	0x26, 0x8b, 0x0c, 0x74, 0x3b, 0x61, 0x56, 0xd7, 0x9d, 0xe0, 0xc6, 0xea, 0x4e, 0xe6, 0xf6, 0x8a,
	0x9d, 0x26, 0xd3, 0xfb, 0x89, 0xba, 0xff, 0x18, 0x87, 0x91, 0xeb, 0x7b, 0x8d, 0x02, 0x4b, 0x38,
	0x9d, 0x64, 0xde, 0x82, 0x35, 0xb6, 0x5d, 0x56, 0xc1, 0x0d, 0x58, 0x3d, 0xd1, 0x2f, 0x33, 0xb1,
	0x32, 0x1f, 0x42, 0x99, 0xed, 0x53, 0xed, 0xc5, 0x26, 0x18, 0x13, 0xd7, 0x4b, 0x5c, 0x7c, 0x31,
	0x81, 0x71, 0x9d, 0x99, 0xe0, 0x66, 0x05, 0x57, 0x12, 0xcc, 0x7b, 0x02, 0x4c, 0xa5, 0xe1, 0x5b,
	0x90, 0x67, 0x04, 0x71, 0x1d, 0xd7, 0xe4, 0x87, 0xcc, 0x88, 0x2c, 0x8d, 0x38, 0xdf, 0xdc, 0x83,
	0x75, 0x69, 0x86, 0x10, 0xb5, 0x60, 0x95, 0x53, 0xc4, 0xcd, 0xb5, 0x28, 0x2b, 0xee, 0x2d, 0xb1,
	0xcd, 0xfc, 0x29, 0x54, 0x44, 0xd2, 0x28, 0x8c, 0xe7, 0x50, 0x10, 0xa4, 0x74, 0xf7, 0x93, 0xda,
	0xd9, 0xbe, 0xf7, 0xf2, 0x62, 0xfb, 0xab, 0x6f, 0xf2, 0x65, 0x04, 0xa1, 0x1f, 0xf8, 0x91, 0x33,
	0x56, 0x08, 0x52, 0x83, 0x79, 0x04, 0x55, 0x1e, 0xa0, 0x59, 0x6c, 0x40, 0x1d, 0xf2, 0xfb, 0xaa,
	0xf9, 0xca, 0xdb, 0x7c, 0x81, 0x6e, 0xc1, 0x4a, 0x77, 0x26, 0x8b, 0xdb, 0xba, 0x34, 0xa9, 0x3b,
	0xd3, 0x0e, 0x45, 0x37, 0x98, 0xff, 0xce, 0xc0, 0x46, 0x5b, 0xf5, 0xa3, 0xcc, 0x5d, 0x12, 0x98,
	0xa5, 0x4a, 0x32, 0xad, 0x78, 0xac, 0xd2, 0x64, 0xf4, 0x4d, 0x28, 0x2b, 0x12, 0x4b, 0xa9, 0x2c,
	0xf3, 0x44, 0xb3, 0xc5, 0x5b, 0xd0, 0x96, 0x6c, 0x41, 0x5b, 0x5d, 0xd9, 0x82, 0xb6, 0x8b, 0xd4,
	0x84, 0x5f, 0xfd, 0x63, 0x3b, 0x63, 0x27, 0x45, 0xd1, 0x40, 0xc3, 0x5a, 0x5e, 0x2d, 0x4b, 0x62,
	0x9a, 0x9f, 0x07, 0xa3, 0x3b, 0xd3, 0xd2, 0xb6, 0x3b, 0x63, 0xaa, 0x78, 0xc1, 0x15, 0x2b, 0xf3,
	0x0e, 0x00, 0xdd, 0x24, 0xbc, 0xb1, 0x05, 0xd9, 0xee, 0x4c, 0x84, 0x38, 0xe5, 0x4f, 0x3b, 0xdb,
	0x9d, 0x99, 0xff, 0xc9, 0x80, 0xa1, 0xd2, 0x06, 0x7d, 0x99, 0x7e, 0x0a, 0xce, 0x10, 0xcb, 0x26,
	0x11, 0x49, 0x89, 0x03, 0x46, 0xd5, 0x53, 0x8b, 0xef, 0x43, 0x6d, 0xa8, 0x8e, 0x9d, 0x88, 0xf4,
	0xe8, 0x01, 0x5c, 0xd2, 0x73, 0x69, 0x55, 0xcd, 0x26, 0x65, 0xf7, 0x19, 0x4b, 0x93, 0x5d, 0xa7,
	0x12, 0x31, 0x15, 0x7d, 0x0b, 0xea, 0xfd, 0xf9, 0x4f, 0x1c, 0x8f, 0xb8, 0x1e, 0xee, 0x9d, 0xc6,
	0xad, 0xe3, 0x0a, 0xcb, 0x82, 0xba, 0xc4, 0x79, 0x70, 0xea, 0x0e, 0xb1, 0x37, 0xc0, 0x1a, 0xd2,
	0x75, 0x25, 0x17, 0x37, 0x92, 0x32, 0x87, 0x72, 0x57, 0xe5, 0xd0, 0x5f, 0x0d, 0x80, 0xf8, 0x5c,
	0xe8, 0x07, 0x00, 0x6c, 0xc2, 0xe9, 0x9d, 0x48, 0x9f, 0x7e, 0xe2, 0xf0, 0x19, 0x7d, 0x55, 0xee,
	0x2c, 0x28, 0x9c, 0x8a, 0x92, 0xc4, 0xdd, 0x53, 0x51, 0x1d, 0x31, 0x27, 0x0b, 0xcb, 0xe4, 0x2e,
	0x74, 0x0b, 0x8a, 0x2c, 0xb7, 0x7b, 0xee, 0x90, 0xe5, 0x92, 0xd1, 0x2e, 0xbd, 0xba, 0xd8, 0x16,
	0x37, 0xe7, 0x7d, 0xbb, 0x30, 0x10, 0x57, 0x68, 0x5c, 0xbd, 0x72, 0xac, 0x20, 0x8a, 0x15, 0xba,
	0x07, 0x39, 0x3a, 0x39, 0xb1, 0x92, 0xfa, 0xa6, 0x39, 0xcd, 0x24, 0xd0, 0x0d, 0x28, 0x78, 0xd3,
	0x49, 0x8f, 0xcc, 0x22, 0x51, 0x63, 0x57, 0xbd, 0xe9, 0xa4, 0x3b, 0x8b, 0xd0, 0x67, 0xc1, 0x20,
	0x3e, 0x71, 0xc6, 0x8c, 0x55, 0x60, 0xac, 0x22, 0x23, 0x50, 0xa6, 0x09, 0x65, 0x96, 0x08, 0xdc,
	0x87, 0xee, 0xb0, 0x51, 0xa4, 0x1e, 0xb4, 0x4b, 0x63, 0x99, 0xc1, 0x87, 0x43, 0x34, 0x4a, 0x26,
	0x0b, 0x73, 0xb4, 0xb1, 0x0c, 0x47, 0x6b, 0x19, 0xc5, 0xbc, 0xfd, 0x01, 0x18, 0x43, 0x87, 0x38,
	0x5c, 0x03, 0x2c, 0x43, 0x43, 0x91, 0xe2, 0x31, 0xec, 0x67, 0x50, 0x89, 0x73, 0x94, 0x6b, 0x28,
	0x2d, 0xe5, 0x0c, 0x31, 0x2a, 0xd3, 0xe3, 0x43, 0xdd, 0xc3, 0x33, 0xd2, 0x4b, 0x2b, 0x5b, 0x5b,
	0x86, 0x32, 0x44, 0xa1, 0x8f, 0x93, 0x0a, 0x87, 0xb0, 0xae, 0x9a, 0x1b, 0xae, 0xaa, 0xbc, 0x94,
	0x1a, 0xa6, 0x40, 0x99, 0x96, 0xef, 0x41, 0xd1, 0x09, 0x02, 0x8e, 0xbf, 0xbe, 0x0c, 0xfc, 0x82,
	0x13, 0x04, 0x0c, 0xd9, 0x85, 0x1a, 0xcb, 0xae, 0x10, 0x47, 0xd3, 0x31, 0x11, 0x47, 0xa8, 0x2c,
	0xa5, 0x79, 0xa1, 0xb8, 0x36, 0x87, 0x65, 0xaa, 0xfa, 0x50, 0xc6, 0xa2, 0x1a, 0x71, 0x35, 0xd5,
	0x65, 0xa8, 0x59, 0x93, 0x98, 0x4c, 0xc7, 0xdb, 0x50, 0xe5, 0x37, 0x2a, 0x0e, 0x7b, 0x8e, 0x98,
	0xd2, 0x6a, 0xac, 0xd2, 0x57, 0x24, 0x5d, 0xce, 0xb8, 0x5f, 0x81, 0x82, 0xa8, 0x22, 0xf4, 0x5a,
	0x8d, 0xdb, 0x8a, 0x9c, 0xe8, 0x21, 0x50, 0x15, 0x56, 0xf6, 0x82, 0x40, 0x74, 0x25, 0xf4, 0xa7,
	0xf9, 0xdb, 0x0c, 0x80, 0x56, 0x82, 0xff, 0xbf, 0xc5, 0xef, 0x0e, 0xe4, 0x4f, 0xfd, 0x78, 0x68,
	0xa9, 0xaa, 0xd2, 0xe7, 0x13, 0xbd, 0x9a, 0xf3, 0x4d, 0xe6, 0x9f, 0x33, 0x50, 0x94, 0x1c, 0xf4,
	0x45, 0xa8, 0xa9, 0x0f, 0x40, 0xb9, 0x81, 0x5f, 0x78, 0x55, 0xc5, 0x90, 0x53, 0xeb, 0x26, 0x18,
	0x91, 0x3b, 0xf2, 0x1c, 0x32, 0x0d, 0xc5, 0x04, 0x68, 0xc7, 0x04, 0xea, 0x9a, 0x90, 0x4e, 0x31,
	0xac, 0x9c, 0xe6, 0x6d, 0xbe, 0xa0, 0xf5, 0xf3, 0x20, 0x51, 0x3f, 0x0f, 0x3e, 0x61, 0xfd, 0x34,
	0x3d, 0x28, 0x27, 0x5e, 0x39, 0xe8, 0xfc, 0x93, 0xb4, 0x5c, 0x2e, 0x69, 0xa9, 0x0d, 0xa6, 0xfd,
	0xde, 0x73, 0x31, 0x6a, 0x1b, 0xf6, 0x6a, 0xc0, 0xdb, 0xf0, 0x3a, 0xe4, 0x03, 0xff, 0xc7, 0x38,
	0x64, 0xb6, 0xae, 0xd8, 0x7c, 0x41, 0xa9, 0x11, 0x71, 0x9e, 0x63, 0x66, 0x6a, 0xce, 0xe6, 0x0b,
	0xf3, 0x1b, 0xb0, 0xa6, 0x5f, 0x8d, 0x1f, 0xa1, 0x2e, 0xbe, 0x2b, 0xb2, 0xfa, 0x5d, 0x61, 0xfe,
	0x3c, 0x43, 0x7b, 0x09, 0x26, 0x1c, 0xbb, 0x23, 0x93, 0x70, 0x07, 0x82, 0x9c, 0x1a, 0x61, 0x0c,
	0x9b, 0xfd, 0xa6, 0x8a, 0x3a, 0x4e, 0xf4, 0x9d, 0x08, 0x0f, 0x85, 0x99, 0x72, 0x49, 0x03, 0xd1,
	0x71, 0xa2, 0xef, 0x3a, 0x1e, 0xc1, 0x43, 0xe1, 0xd7, 0x98, 0x80, 0x9a, 0x50, 0x7c, 0xe0, 0x9d,
	0xe2, 0xb1, 0x1f, 0x70, 0xf7, 0x1a, 0xb6, 0x5a, 0xdf, 0xfd, 0x7d, 0x09, 0x80, 0xe5, 0x2c, 0xbb,
	0xe8, 0xd0, 0xf7, 0x01, 0x3a, 0x58, 0xbe, 0x09, 0xa1, 0x0d, 0xf5, 0xfc, 0x95, 0x78, 0xf7, 0x6b,
	0x5e, 0xf6, 0x2c, 0x66, 0x36, 0x7f, 0xf6, 0xf7, 0x7f, 0xfd, 0x26, 0x5b, 0x47, 0xc8, 0x12, 0x1c,
	0xeb, 0x4c, 0x88, 0x9e, 0xa3, 0x43, 0x3a, 0x9b, 0xa9, 0xe7, 0x26, 0x54, 0x56, 0x6d, 0xc6, 0x24,
	0x20, 0xf3, 0x66, 0x23, 0x05, 0xa9, 0x1a, 0x57, 0xb3, 0xc6, 0x30, 0x4b, 0xc8, 0xb0, 0x94, 0x2c,
	0xb7, 0x52, 0x3c, 0x6f, 0xc4, 0x56, 0x26, 0xdf, 0xa8, 0x62, 0x2b, 0x53, 0xef, 0x51, 0x9a, 0x95,
	0x82, 0xa3, 0x59, 0x39, 0x82, 0xb5, 0x18, 0x7a, 0x8f, 0xa0, 0x46, 0x0a, 0x44, 0x3d, 0xe6, 0x34,
	0x6f, 0xfe, 0x0f, 0x8e, 0x50, 0x60, 0x32, 0x05, 0x9b, 0xa8, 0x69, 0x29, 0x5e, 0xac, 0xc2, 0x3a,
	0x7b, 0x88, 0xe7, 0xe7, 0xa8, 0xc7, 0x14, 0xa9, 0xc4, 0xbd, 0xd4, 0xd7, 0x37, 0x17, 0x5e, 0xf2,
	0x94, 0x9a, 0x4d, 0xa6, 0x66, 0x03, 0xd5, 0x2d, 0xc5, 0xd3, 0x4e, 0xf2, 0x04, 0xca, 0xba, 0x82,
	0x05, 0x8f, 0x37, 0x17, 0x80, 0x63, 0x9f, 0x5f, 0x67, 0xc8, 0x65, 0x54, 0xb2, 0x34, 0xf9, 0x7d,
	0x30, 0x98, 0x6b, 0xe8, 0x74, 0x9f, 0x06, 0xd3, 0x62, 0xa0, 0x0f, 0xff, 0x66, 0x85, 0x01, 0x19,
	0xa8, 0x60, 0x09, 0xb9, 0xf7, 0x59, 0xe8, 0xc4, 0xa0, 0x92, 0x46, 0xb9, 0x6c, 0x26, 0x32, 0xab,
	0x0c, 0x06, 0x50, 0xd1, 0x92, 0x92, 0xf7, 0x19, 0x8e, 0xe8, 0xce, 0xd2, 0x38, 0xea, 0xf5, 0x33,
	0xf1, 0x6a, 0xa2, 0xa1, 0x48, 0xb9, 0x47, 0xb0, 0xde, 0xc1, 0x44, 0x1b, 0x69, 0x2f, 0x45, 0x4a,
	0x0c, 0x93, 0x66, 0x9d, 0x21, 0xad, 0xa3, 0x35, 0x4b, 0x97, 0x3d, 0x86, 0x1a, 0xb5, 0x49, 0x5e,
	0xbf, 0xfc, 0x2d, 0x29, 0x05, 0x78, 0xf9, 0x03, 0x92, 0x79, 0x83, 0x81, 0xd6, 0x50, 0xc5, 0x4a,
	0x41, 0x1c, 0x41, 0xb1, 0x83, 0x85, 0x8e, 0x7a, 0xca, 0x20, 0x9e, 0x24, 0x97, 0x98, 0x19, 0x23,
	0x32, 0xba, 0x75, 0xc6, 0xeb, 0xcf, 0x39, 0x1a, 0xb0, 0x50, 0xf2, 0x69, 0x15, 0x25, 0x85, 0x55,
	0xe2, 0x6d, 0xa4, 0xc9, 0x02, 0xf4, 0x2d, 0x06, 0xfa, 0x39, 0xb4, 0xcd, 0x41, 0x23, 0xeb, 0x4c,
	0xcd, 0xe4, 0xe7, 0xd6, 0x99, 0x9a, 0xc0, 0xcf, 0xd1, 0x0f, 0x99, 0x3b, 0x92, 0x53, 0x63, 0xda,
	0x1d, 0x5b, 0x09, 0x25, 0x0b, 0xc3, 0xa5, 0xf6, 0xa9, 0x2e, 0x42, 0xdd, 0x87, 0x7c, 0x07, 0x93,
	0xee, 0x0c, 0xd5, 0xe2, 0x99, 0x43, 0x1a, 0x8f, 0x74, 0xd2, 0x42, 0xd0, 0xba, 0x33, 0xeb, 0x8c,
	0x4f, 0x6f, 0xe7, 0xe8, 0x6b, 0xcc, 0x15, 0x8f, 0xdc, 0x88, 0x22, 0xa5, 0xac, 0x4b, 0x0d, 0x33,
	0x26, 0x62, 0x08, 0x6b, 0x08, 0xac, 0x58, 0xe4, 0x19, 0x2b, 0x6b, 0x72, 0xdc, 0xbe, 0x24, 0x3e,
	0x8d, 0x04, 0x55, 0x1b, 0xcb, 0x95, 0x37, 0x0d, 0x4b, 0xb2, 0x3e, 0xa0, 0xa7, 0x95, 0x0b, 0x15,
	0xb2, 0x76, 0xe3, 0xc5, 0xab, 0xad, 0x6b, 0x7f, 0x7b, 0xb5, 0x75, 0xed, 0x9f, 0xaf, 0xb6, 0x32,
	0xbf, 0x7b, 0xbd, 0x75, 0xed, 0x2f, 0xaf, 0xb7, 0x32, 0x2f, 0x5e, 0x6f, 0x65, 0xfa, 0xe2, 0xdf,
	0x42, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x67, 0xdc, 0x4f, 0xd0, 0x41, 0x1a, 0x00, 0x00,
}
