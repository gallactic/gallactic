syntax = 'proto3';

package grpc;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = false;
option (gogoproto.messagename_all) = false;
option (gogoproto.protosizer_all) =false;




// Account Service definition
service Accounts {
	rpc GetAccount(AddressRequest) returns (Account);
	rpc GetValidators(Empty) returns (ValidatorsResponse);
	rpc GetStorage(StorageAtRequest) returns (StorageResponse);
	rpc GetStorageAt(StorageAtRequest) returns(StorageResponse);
	rpc GetAccounts(Empty) returns (AccountsOutput);

}

message Empty {
}


message AccountsOutput{
	 uint64 BlockHeight = 1;
	 repeated Account Account = 2;
}

message Account {
    Account Account  = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/core/account.Account"];
}

message ListAccountsParam {
    string Query = 1;
}
message AddressRequest {
	bytes Address = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/crypto.Address", (gogoproto.nullable) = false];

}

message ValidatorsResponse {
uint64 BlockHeight  = 1 ; 
repeated bytes Validators  = 2 [(gogoproto.customtype) = "github.com/gallactic/gallactic/core/validator.Validator"];
}


message StorageAtRequest {
 bytes Address = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/crypto.Address",(gogoproto.nullable) = false];
 bytes	Key = 2    [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes",(gogoproto.nullable) = false];
}

message StorageResponse {
 bytes	Key = 1   [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes", (gogoproto.nullable) = false];
 bytes	Value = 2    [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes", (gogoproto.nullable) = false];

}



// BlockChain  Service definition
service BlockChain{
    rpc Getstatus(Empty) returns(StatusResponse);
    rpc GetBlock(BlockRequest) returns(BlockResponse);
   	rpc GetBlocks(BlocksRequest) returns (BlocksResponse);
    rpc GetGenesis(Empty) returns(GenesisResponse);
    rpc GetChainID(Empty) returns(ChainResponse);
    rpc GetLatestBlock(BlockRequest) returns(BlockResponse);
    rpc GetConsensusState(Empty) returns (ConsensusResponse);
    rpc GetBlockTxs(BlockRequest)returns(BlockTxsResponse);
}



message ConsensusResponse{
   bytes RoundState = 1  [(gogoproto.customtype) = "github.com/tendermint/tendermint/consensus/types.RoundStateSimple",(gogoproto.nullable) = false];
   repeated google.protobuf.ListValue PeerRoundStates = 2 [(gogoproto.customtype) = "github.com/tendermint/tendermint/consensus/types.PeerRoundState",(gogoproto.nullable) = false];

}

message ChainResponse{
  string ChainName = 1;
  string ChainId  = 2  ; 
  bytes	 GenesisHash = 3 [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes", (gogoproto.nullable) = false];
}


message StatusResponse {
 bytes  NodeInfo     = 1 [(gogoproto.customtype) = "github.com/tendermint/tendermint/p2p.NodeInfo",(gogoproto.nullable) = false];
 bytes	GenesisHash  = 2 [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes",(gogoproto.nullable) = false];
 bytes	PubKey       = 3  [(gogoproto.customtype) =   "github.com/gallactic/gallactic/crypto.PublicKey",(gogoproto.nullable) = false];
 bytes	LatestBlockHash = 4 [(gogoproto.customtype) = "github.com/gallactic/gallactic/common/binary.HexBytes", (gogoproto.nullable) = false];
 uint64	LatestBlockHeight = 5;
 int64	LatestBlockTime  = 6;
 string	NodeVersion      = 7;
}

message BlockRequest {
	uint64 height = 1;
}

message BlocksRequest {
	uint64 minHeight = 1;
	uint64 maxHeight = 2;
}

message BlockResponse {
     bytes  BlockMeta  = 1  [(gogoproto.customtype) = "github.com/tendermint/tendermint/types.BlockMeta"];
     bytes Block  = 2  [(gogoproto.customtype) = "github.com/tendermint/tendermint/types.Block"];

}
message BlocksResponse {
 uint64  LastHeight = 1;
 repeated bytes BlockMeta = 2 [(gogoproto.customtype) = "github.com/tendermint/tendermint/types.BlockMeta"];

}

message BlockMeta {
 bytes BlockMeta  = 1  [(gogoproto.customtype) = "github.com/tendermint/tendermint/types.BlockMeta"];
}



message Block {
  bytes  Block  = 2 [(gogoproto.customtype) = "github.com/tendermint/tendermint/types.Block"];
}

message GenesisResponse {
   GenesisResponse Genesis = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/core/proposal.Genesis"];
}

message BlockTxsResponse {
   int32 Count = 1;
	 repeated google.protobuf.ListValue  Txs = 3 [(gogoproto.customtype) = "github.com/gallactic/gallactic/txs.Envelope"];

}

// Transaction Service definition
service Transaction {
	rpc BroadcastTx(TransactRequest) returns(ReceiptResponse);
	rpc GetUnconfirmedTxs(UnconfirmedTxsRequest) returns(UnconfirmTxsResponse);
	
}

message TransactRequest {
	repeated google.protobuf.ListValue  txs = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/txs.Envelope", (gogoproto.nullable) = false];
}

message ReceiptResponse {
 bytes  TxHash = 1;
}

message UnconfirmedTxsRequest {
   int32 maxTxs = 1;
}

message UnconfirmTxsResponse {
    int32 Count = 1;
	repeated google.protobuf.ListValue  Txs = 3 [(gogoproto.customtype) = "github.com/gallactic/gallactic/txs.Envelope", (gogoproto.nullable) = false];
}

//Network Service definition
service Network {
  rpc GetNetworkInfo(Empty) returns(NetInfoResponse);
  rpc GetPeers(Empty) returns (PeerResponse);
}

message Peer {
	 bytes Peer = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/rpc.Peer"];
}

message PeerResponse {
	 bytes Peer = 1 [(gogoproto.customtype) = "github.com/gallactic/gallactic/rpc.Peer"];
}

message NetInfoResponse {
 bool  Listening =1;
 repeated string Listeners = 2;
 repeated bytes Peers = 3;

}

